{"version":3,"sources":["logo.svg","storage.js","todo.js","App.js","reportWebVitals.js","index.js"],"names":["params","localStorage","setItem","JSON","stringify","parse","getItem","Todo","state","arr","storage","value","editable","editValue","handleChange","e","setState","target","handleForm","preventDefault","arr1","value1","push","handleDelete","i","splice","console","log","handleEdit","d","handleEditChange","this","style","padding","onSubmit","type","onChange","required","width","margin","map","className","disabled","onBlur","border","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAAe,I,uCCAD,EACJ,SAACA,GAAD,OAAYC,aAAaC,QAAQ,UAAUC,KAAKC,UAAUJ,KADtD,EAEH,kBAAMG,KAAKE,MAAMJ,aAAaK,QAAQ,a,OCkFlCC,E,4MA/EXC,MAAM,CACFC,IAAKC,IAAkBA,IAAkB,GACzCC,MAAO,GACPC,UAAW,EACXC,UAAW,I,EAIfC,aAAa,SAACC,GACV,EAAKC,SAAS,CAACL,MAAMI,EAAEE,OAAON,S,EAGlCO,WAAW,SAACH,GACRA,EAAEI,iBACF,IAAIC,EAAO,EAAKZ,MAAMC,IAClBY,EAAS,EAAKb,MAAMG,MACxBS,EAAKE,KAAKD,GACV,EAAKL,SAAS,CAAEP,IAAKW,EAAMT,MAAM,KAAI,kBAAID,EAAa,EAAKF,MAAMC,S,EAKrEc,aAAa,SAACC,GACV,IAAIJ,EAAO,EAAKZ,MAAMC,IACtBW,EAAKK,OAAOD,EAAE,GACd,EAAKR,SAAS,CAACP,IAAKW,IAAM,kBAAIV,EAAa,EAAKF,MAAMC,QACtDiB,QAAQC,IAAIP,I,EAGhBQ,WAAW,SAACC,EAAEL,GAAK,IAAD,EACoB,EAAKhB,MAA5BI,GADG,EACPH,IADO,EACHG,UAASC,EADN,EACMA,UACpB,GAAGD,IAAWY,EAAE,CACZ,IAAIJ,EAAO,EAAKZ,MAAMC,IACtBiB,QAAQC,IAAId,EAAUO,EAAKI,IAC3BJ,EAAKI,GAAOX,GAAuBO,EAAKI,GACxC,EAAKR,SAAS,CAACP,IAAKW,EAAKR,UAAU,EAAEC,UAAU,KAAI,kBAAIH,EAAa,EAAKF,MAAMC,aAE/E,EAAKO,SAAS,CAACJ,SAAUY,K,EAKjCM,iBAAiB,SAACf,GACd,EAAKC,SAAS,CAACH,UAAWE,EAAEE,OAAON,S,4CAKvC,WAAS,IAAD,SACyBoB,KAAKvB,MAA3BG,EADH,EACGA,MAAMF,EADT,EACSA,IAAIG,EADb,EACaA,SACjB,OACI,sBAAKoB,MAAO,CAACC,QAAQ,QAArB,UACI,uBAAMC,SAAU,SAACnB,GAAD,OAAK,EAAKG,WAAWH,IAArC,UACI,uBAAOoB,KAAK,OAAOxB,MAAOA,EAC1ByB,SAAU,SAACrB,GAAD,OAAK,EAAKD,aAAaC,IAAIsB,UAAQ,IAC7C,uBAAOF,KAAK,SAASxB,MAAM,WAE/B,qBAAKqB,MAAO,CAACM,MAAM,QAAQC,OAAO,YAAlC,SACC9B,EAAI+B,KAAI,SAACX,EAAEL,GAAH,aACL,sBAAqBiB,UAAU,cAA/B,UACI,0BACAT,MAAO,CAACO,OAAO,YACfG,SAAU9B,IAAaY,EACvBmB,OAAQ,SAAC5B,GAAD,OAAK,EAAKe,iBAAiBf,KAHnC,sBAIO,CAAC6B,OAAOhC,IAAaY,EAAI,kBAAoB,mBAJpD,6BAKcK,GALd,IAOA,wBAAQgB,QAAS,kBAAI,EAAKjB,WAAWC,EAAEL,IAAvC,SACKZ,IAAaY,EAAI,OAAS,SAE/B,wBAAQqB,QAAS,kBAAI,EAAKtB,aAAaC,IAAvC,6BAXM,QAAQA,e,GA5DnBsB,IAAMC,WCQVC,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCKSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"todoapp/static/js/main.d303369d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"todoapp/static/media/logo.6ce24c58.svg\";","export default{\n    save: (params) => localStorage.setItem('todoapp',JSON.stringify(params)),\n    parse: () => JSON.parse(localStorage.getItem('todoapp'))\n}","import React from 'react';\nimport storage from './storage';\nimport './App.css'\n\nclass Todo extends React.Component{\n    state={\n        arr: storage.parse() ? storage.parse() : [],\n        value: \"\",\n        editable: -1,\n        editValue: \"\"\n\n    }\n\n    handleChange=(e)=>{\n        this.setState({value:e.target.value})\n    }\n\n    handleForm=(e)=>{\n        e.preventDefault();\n        let arr1 = this.state.arr;\n        let value1 = this.state.value;\n        arr1.push(value1)\n        this.setState({ arr: arr1, value:\"\"},()=>storage.save(this.state.arr));\n\n\n    }\n\n    handleDelete=(i)=>{\n        let arr1 = this.state.arr;\n        arr1.splice(i,1);\n        this.setState({arr: arr1},()=>storage.save(this.state.arr))\n        console.log(arr1);\n    }\n\n    handleEdit=(d,i)=>{\n        const {arr,editable,editValue}  = this.state;\n        if(editable===i){\n            let arr1 = this.state.arr;\n            console.log(editValue,arr1[i])\n            arr1[i] = !!editValue? editValue : arr1[i];\n            this.setState({arr: arr1,editable:-1,editValue:\"\"},()=>storage.save(this.state.arr));\n        }else{\n            this.setState({editable: i});\n        }\n\n    }\n\n    handleEditChange=(e)=>{\n        this.setState({editValue: e.target.value});\n    }\n\n\n\n    render(){\n        const {value,arr,editable} = this.state;\n        return(\n            <div style={{padding:'20px'}}>\n                <form onSubmit={(e)=>this.handleForm(e)}>\n                    <input type=\"text\" value={value}\n                    onChange={(e)=>this.handleChange(e)} required/>\n                    <input type=\"submit\" value=\"ADD\"/>\n                </form>\n                <div style={{width:'400px',margin:'0px auto'}}>\n                {arr.map((d,i)=>\n                    <div key={\"item-\"+i} className=\"listWrapper\">\n                        <input \n                        style={{margin:\"0px 10px\"}} \n                        disabled={editable === i ? false : true} \n                        onBlur={(e)=>this.handleEditChange(e)}\n                        style={{border:editable === i ? \"3px solid green\" : \"1px solid grey\"  }}\n                        defaultValue={d}/>\n                            {/* {d}</code> */}\n                        <button onClick={()=>this.handleEdit(d,i)}>\n                            {editable === i ? \"save\" : \"edit\" }\n                        </button>\n                        <button onClick={()=>this.handleDelete(i)}>ðŸ—‘ </button>\n                    </div>\n                    )}\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default Todo;","import logo from './logo.svg';\nimport './App.css';\nimport Todo from './todo.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}